set.seed(7926)
s <-  function(x){
n <- length(x)
1/n * sum((x - mean(x))^3) / (sd(x)^3)
}
x <- rnorm(100,10,2)
s_value <- s(x)
s_value
datos <- as.data.frame(x)
ggplot(datos, aes(x = x)) + geom_histogram(alpha = 0.5)
s_boot <- function(x) {
y <- sample(x, size = length(x), replace = TRUE)
s(y)
}
B <- 2000
thetas <- rerun(B,s_boot(x)) %>% flatten_dbl()
se <- function(x) sqrt(sum((x - mean(x))^2)) / length(x)
i_norm <- s(x) - 1.96*se(thetas)
s_norm <- s(x) + 1.96*se(thetas)
cat("(",i_norm,",",s_norm,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red')
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(7926)
s <-  function(x){
n <- length(x)
1/n * sum((x - mean(x))^3) / (sd(x)^3)
}
x <- rnorm(100,10,2)
s_value <- s(x)
s_value
datos <- as.data.frame(x)
ggplot(datos, aes(x = x)) + geom_histogram(alpha = 0.5)
s_boot <- function(x) {
y <- sample(x, size = length(x), replace = TRUE)
s(y)
}
B <- 2000
thetas <- rerun(B,s_boot(x)) %>% flatten_dbl()
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas)
cat("(",i_norm,",",s_norm,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red')
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(7926)
s <-  function(x){
n <- length(x)
1/n * sum((x - mean(x))^3) / (sd(x)^3)
}
x <- rnorm(500,10,2)
s_value <- s(x)
s_value
datos <- as.data.frame(x)
ggplot(datos, aes(x = x)) + geom_histogram(alpha = 0.5)
s_boot <- function(x) {
y <- sample(x, size = length(x), replace = TRUE)
s(y)
}
B <- 2000
thetas <- rerun(B,s_boot(x)) %>% flatten_dbl()
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas)
cat("(",i_norm,",",s_norm,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red')
i_t <- s(x) - qt(0.025, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(0.025, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
i_t <- s(x) - qt(0.025, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(1 - 0.025, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
?qt()
qnorm(0.975)
i_t <- s(x) - qt(0.025, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
i_t <- s(x) - qt(0.025, length(x)-1)*sd(thetas)
s_t <- s(x) - qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
i_t <- s(x) + qt(0.025, length(x)-1)*sd(thetas)
s_t <- s(x) - qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
i_t <- s(x) + qt(0.025, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
i_t <- s(x) - qt(0.975, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'red') +
geom_vline(xintercept = s_t, col = 'red')
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green') +
geom_vline(xintercept = s_t, col = 'green')
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashes") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashes")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(7926)
s <-  function(x){
n <- length(x)
1/n * sum((x - mean(x))^3) / (sd(x)^3)
}
x <- rnorm(500,10,2)
s_value <- s(x)
s_value
datos <- as.data.frame(x)
ggplot(datos, aes(x = x)) + geom_histogram(alpha = 0.5)
s_boot <- function(x) {
y <- sample(x, size = length(x), replace = TRUE)
s(y)
}
B <- 2000
thetas <- rerun(B,s_boot(x)) %>% flatten_dbl()
i_norm <- s(x) - 1.96*sd(thetas)/sqrt(length(x))
s_norm <- s(x) + 1.96*sd(thetas) /sqrt(length(x))#qnorm(0.975)
cat("(",i_norm,",",s_norm,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red')
i_t <- s(x) - qt(0.975, length(x)-1)*sd(thetas)/sqrt(length(x))
s_t <- s(x) + qt(0.975, length(x)-1)*sd(thetas)/sqrt(length(x))
cat("(",i_t,",",s_t,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(7926)
s <-  function(x){
n <- length(x)
1/n * sum((x - mean(x))^3) / (sd(x)^3)
}
x <- rnorm(500,10,2)
s_value <- s(x)
s_value
datos <- as.data.frame(x)
ggplot(datos, aes(x = x)) + geom_histogram(alpha = 0.5)
s_boot <- function(x) {
y <- sample(x, size = length(x), replace = TRUE)
s(y)
}
B <- 2000
thetas <- rerun(B,s_boot(x)) %>% flatten_dbl()
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas) #qnorm(0.975)
cat("(",i_norm,",",s_norm,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red')
i_t <- s(x) - qt(0.975, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed")
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
cat("(",i_per,",",s_per,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "point") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed") +
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = ".") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed") +
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed") +
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "point") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = ".") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashes") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashesed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
set.seed(9516)
y <- rnorm(1000,10,2)
mu <- mean(y)
mu
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
set.seed(5865)
a <- data.frame(length = rnorm(1000, 1, 0.5))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
set.seed(5865)
a <- data.frame(length = rnorm(500, 1, 0.5))
b <- data.frame(length = rnorm(2500, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_histogram(col='red',fill = 'black', alpha = 0.5)
set.seed(5865)
a <- data.frame(length = rnorm(500, 1, 0.5))
b <- data.frame(length = rnorm(2500, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_histogram(fill = 'black', alpha = 0.5)
set.seed(5865)
a <- data.frame(length = rnorm(500, 1, 0.5))
b <- data.frame(length = rnorm(2500, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_histogram( alpha = 0.5)
s(datos$length)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(7926)
s <-  function(x){
n <- length(x)
1/n * sum((x - mean(x))^3) / (sd(x)^3)
}
x <- rnorm(500,10,2)
s_value <- s(x)
s_value
datos <- as.data.frame(x)
ggplot(datos, aes(x = x)) + geom_histogram(alpha = 0.5)
s_boot <- function(x) {
y <- sample(x, size = length(x), replace = TRUE)
s(y)
}
B <- 2000
thetas <- rerun(B,s_boot(x)) %>% flatten_dbl()
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas) #qnorm(0.975)
cat("(",i_norm,",",s_norm,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red')
i_t <- s(x) - qt(0.975, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed")
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
cat("(",i_per,",",s_per,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
set.seed(5865)
a <- data.frame(length = rnorm(500, 1, 0.5))
b <- data.frame(length = rnorm(2500, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_histogram( alpha = 0.5)
s(datos$length)
B <- 2000
thetas <- rerun(B,s_boot(datos$length)) %>% flatten_dbl()
#Intervalos de confianza normales
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas)
#Intervalos de confianza t
i_t <- s(x) - qt(0.975, length(datos$length)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(datos$length)-1)*sd(thetas)
#Intervalos percentil
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
cat("(",i_norm,",",s_norm,")")
cat("(",i_t,",",s_t,")")
cat("(",i_per,",",s_per,")")
#Intervalos de confianza normales
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas)
#Intervalos de confianza t
i_t <- s(x) - qt(0.975, length(datos$length)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(datos$length)-1)*sd(thetas)
#Intervalos percentil
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
cat("(",i_norm,",",s_norm,")\n")
cat("(",i_t,",",s_t,")")
cat("(",i_per,",",s_per,")")
#Intervalos de confianza normales
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas)
#Intervalos de confianza t
i_t <- s(x) - qt(0.975, length(datos$length)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(datos$length)-1)*sd(thetas)
#Intervalos percentil
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
cat("(",i_norm,",",s_norm,")\n")
cat("(",i_t,",",s_t,")\n")
cat("(",i_per,",",s_per,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(7926)
s <-  function(x){
n <- length(x)
1/n * sum((x - mean(x))^3) / (sd(x)^3)
}
x <- rnorm(500,10,2)
s_value <- s(x)
s_value
datos <- as.data.frame(x)
ggplot(datos, aes(x = x)) + geom_histogram(alpha = 0.5)
s_boot <- function(x) {
y <- sample(x, size = length(x), replace = TRUE)
s(y)
}
B <- 2000
thetas <- rerun(B,s_boot(x)) %>% flatten_dbl()
i_norm <- s(x) - 1.96*sd(thetas)
s_norm <- s(x) + 1.96*sd(thetas) #qnorm(0.975)
cat("(",i_norm,",",s_norm,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red')
i_t <- s(x) - qt(0.975, length(x)-1)*sd(thetas)
s_t <- s(x) + qt(0.975, length(x)-1)*sd(thetas)
cat("(",i_t,",",s_t,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed")
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
cat("(",i_per,",",s_per,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
set.seed(5865)
a <- data.frame(length = rnorm(500, 1, 0.5))
b <- data.frame(length = rnorm(2500, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_histogram( alpha = 0.5)
s(datos$length)
B <- 2000
thetas <- rerun(B,s_boot(datos$length)) %>% flatten_dbl()
#Intervalos de confianza normales
i_norm <- s(datos$length) - 1.96*sd(thetas)
s_norm <- s(datos$length) + 1.96*sd(thetas)
#Intervalos de confianza t
i_t <- s(datos$length) - qt(0.975, length(datos$length)-1)*sd(thetas)
s_t <- s(datos$length) + qt(0.975, length(datos$length)-1)*sd(thetas)
#Intervalos percentil
s_per <- quantile(thetas, prob = 0.975)
i_per <- quantile(thetas, prob = 0.025)
cat("(",i_norm,",",s_norm,")\n")
cat("(",i_t,",",s_t,")\n")
cat("(",i_per,",",s_per,")")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s_value, col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
s_datos <-  as.data.frame(thetas)
ggplot(s_datos,aes(x=thetas)) + geom_histogram(alpha=0.5)+
geom_vline(xintercept = s(datos$length), col = 'blue') +
geom_vline(xintercept = i_norm, col = 'red') +
geom_vline(xintercept = s_norm, col = 'red') +
geom_vline(xintercept = i_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = s_t, col = 'green', linetype = "dashed") +
geom_vline(xintercept = i_per, col = 'black', linetype = "dashed") +
geom_vline(xintercept = s_per, col = 'black', linetype = "dashed")
