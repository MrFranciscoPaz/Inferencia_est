se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(datos$length)
sd(datos$length)/sqrt(datos$length)
sd(datos$length)/sqrt(length(datos$length))
sd(datos$length)/sqrt(length(datos$length))
se(datos$length)
sd(datos$length)/sqrt(length(datos$length))
se(datos$length) - sd(datos$length)/sqrt(length(datos$length))
se(datos$length) - sd(datos$length)/length(datos$length)
se <- function(x) sqrt(sum((x - mean(x)) ^ 2) / length(x))
se(datos$length) - sd(datos$length)/length(datos$length)
se(datos$length) - sd(datos$length)/sqrt(length(datos$length))
se <- function(x) sqrt(sum((x - mean(x)) ^ 2) / length(x))
se(datos$length) - sd(datos$length)/sqrt(length(datos$length))
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(datos$length)
sd(x)/sqrt(length(x))
se(datos$length)**2
sd(x)/length(x)
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(datos$length)
sqrt(sd(x))/length(x)
sqrt(sd(x))/length(x)
sd(x)/length(x)
sd(x)/sqrt(length(x))
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(datos$length)
sd(x)/sqrt(length(x))
desv_est(x)/sqrt(length(x))
set.seed(649248)
y <- rnorm(100,10,2)
mean(y)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 0, 1))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
# and combine into your new data frame vegLengths
datos <- as.data.frame(rbind(a, b))
mean(datos$length)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 0, 1))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
# and combine into your new data frame vegLengths
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 0, 2))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
# and combine into your new data frame vegLengths
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 2, 2))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
# and combine into your new data frame vegLengths
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 2, 0.5))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
# and combine into your new data frame vegLengths
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 1, 0.5))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
# and combine into your new data frame vegLengths
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
mean(datos$length)
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(datos$length)
sd(datos$length)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(649248)
y <- rnorm(100,10,2)
mean(y)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 1, 0.5))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
# and combine into your new data frame vegLengths
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
mean(datos$length)
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(datos$length)
sd(datos$length)
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
B <- 5000
thetas <- rerun(B,Bootstrap(datos$length)) %>% flatten_dbl()
mean(thetas)
se(thetas)
sd(thetas)
th <- as.data.frame(thetas)
ggplot(th) + geom_histogram(aes(thetas),alpha = 0.5) +
geom_vline(xintercept = mean(thetas), col = 'red',alpha = 0.8) +
geom_vline(xintercept = mean(datos$length),  color = "blue",
linetype = "dashed",alpha = 0.8)
ggplot(datos,aes(x = length)) +
geom_density(col='black',fill = 'black', alpha = 0.1) +
geom_vline(xintercept = mean(thetas), col = 'red',alpha = 0.8) +
geom_vline(xintercept = mean(datos$length),  color = "blue",
linetype = "dashed",alpha = 0.8)
seMediaBoot <- function(x, B){
thetas_boot <- rerun(B, Bootstrap(x)) %>% flatten_dbl()
sd(thetas_boot)
}
B_muestras <- data_frame(n_sims = c( 5, 50, 150, 400, 1000, 1500, 3000,
5000, 10000, 20000)) %>%
mutate(est = map_dbl(n_sims, ~seMediaBoot(x = x, B = .)))
B_muestras
seMediaBoot <- function(x, B){
thetas_boot <- rerun(B, Bootstrap(x)) %>% flatten_dbl()
se(thetas_boot)
}
B_muestras <- data_frame(n_sims = c( 5, 50, 150, 400, 1000, 1500, 3000,
5000, 10000, 20000)) %>%
mutate(est = map_dbl(n_sims, ~seMediaBoot(x = x, B = .)))
B_muestras
seMediaBoot <- function(x, B){
thetas_boot <- rerun(B, Bootstrap(x)) %>% flatten_dbl()
se(thetas_boot)
}
B_muestras <- data_frame(n_sims = c( 5, 50, 150, 400, 1000, 1500, 3000,
5000, 10000, 20000)) %>%
mutate(est = map_dbl(n_sims, ~seMediaBoot(x = datos$length, B = .)))
B_muestras
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
set.seed(649248)
y <- rnorm(1000,10,2)
mean(y)
set.seed(649248)
y <- rnorm(10000,10,2)
mean(y)
set.seed(649248)
y <- rnorm(1000,10,2)
mean(y)
y_mues <- sample(y, size = 200, replace = FALSE)
mean(y_mues)
mu <- mean(y)
mu
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) + geom_histogram(alpha = 0.5)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red')
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='green')
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
Bootstrap(y_mues)
mb <- Bootstrap(y_mues)
mean(mb)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(649248)
y <- rnorm(1000,10,2)
mu <- mean(y)
mu
y_mues <- sample(y, size = 200, replace = FALSE)
mean(y_mues)
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
muestra_boot
}
mb <- Bootstrap(y_mues)
mean(mb)
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5)
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), 'blue')+
geom_vline(xintercept = mean(mb))
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'greeb')
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'green')
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'black')
thetas <- rerun(B,Bootstrap(y_mues)) %>% flatten_dbl()
B <- 100
thetas <- rerun(B,Bootstrap(y_mues)) %>% flatten_dbl()
mean(thetas)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(649248)
y <- rnorm(1000,10,2)
mu <- mean(y)
mu
y_mues <- sample(y, size = 200, replace = FALSE)
mean(y_mues)
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
muestra_boot
}
mb <- Bootstrap(y_mues)
mean(mb)
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'black')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
B <- 100
thetas <- rerun(B,Bootstrap(y_mues)) %>% flatten_dbl()
mean(thetas)
t_datos <- as.data.frame(thetas)
ggplot(t_datos, aes(x = thetas)) +
geom_histogram(alpha = 0.5)
t_datos <- as.data.frame(thetas)
ggplot(t_datos, aes(x = thetas)) +
geom_histogram(alpha = 0.5)+
geom_vline(xintercept = mu, col ='red')+
geom_vline(xintercept = mean(y_mues), col= 'blue')+
geom_vline(xintercept = mean(thetas),col = 'black',
linetype = "dashed")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(5491)
y <- rnorm(1000,10,2)
mu <- mean(y)
mu
y_mues <- sample(y, size = 200, replace = FALSE)
mean(y_mues)
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
muestra_boot
}
mb <- Bootstrap(y_mues)
mean(mb)
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'black')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
B <- 100
thetas <- rerun(B,Bootstrap(y_mues)) %>% flatten_dbl()
mean(thetas)
t_datos <- as.data.frame(thetas)
ggplot(t_datos, aes(x = thetas)) +
geom_histogram(alpha = 0.5)+
geom_vline(xintercept = mu, col ='red')+
geom_vline(xintercept = mean(y_mues), col= 'blue')+
geom_vline(xintercept = mean(thetas),col = 'black',
linetype = "dashed")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(7946)
y <- rnorm(1000,10,2)
mu <- mean(y)
mu
y_mues <- sample(y, size = 200, replace = FALSE)
mean(y_mues)
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
muestra_boot
}
mb <- Bootstrap(y_mues)
mean(mb)
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'black')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
B <- 100
thetas <- rerun(B,Bootstrap(y_mues)) %>% flatten_dbl()
mean(thetas)
t_datos <- as.data.frame(thetas)
ggplot(t_datos, aes(x = thetas)) +
geom_histogram(alpha = 0.5)+
geom_vline(xintercept = mu, col ='red')+
geom_vline(xintercept = mean(y_mues), col= 'blue')+
geom_vline(xintercept = mean(thetas),col = 'black',
linetype = "dashed")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(9516)
y <- rnorm(1000,10,2)
mu <- mean(y)
mu
y_mues <- sample(y, size = 200, replace = FALSE)
mean(y_mues)
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
muestra_boot
}
mb <- Bootstrap(y_mues)
mean(mb)
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'black')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
B <- 100
thetas <- rerun(B,Bootstrap(y_mues)) %>% flatten_dbl()
mean(thetas)
t_datos <- as.data.frame(thetas)
ggplot(t_datos, aes(x = thetas)) +
geom_histogram(alpha = 0.5)+
geom_vline(xintercept = mu, col ='red')+
geom_vline(xintercept = mean(y_mues), col= 'blue')+
geom_vline(xintercept = mean(thetas),col = 'black',
linetype = "dashed")
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(thetas)
thetas + se(thetas)
mean(thetas) + se(thetas)
mean(thetas) + 1.96*se(thetas)
mean(thetas) + 1.96*se(thetas)
(1/2)*(0.9047) + 0.0953
mean(thetas) + 1.96*sd(thetas)
mean(thetas) - 1.96*sd(thetas)
seMediaBoot <- function(x, B){
thetas_boot <- rerun(B, Bootstrap(x)) %>% flatten_dbl()
sd(thetas_boot)
}
B_muestras <- data_frame(n_sims = c( 5, 50, 150, 400, 1000, 1500, 3000,
5000, 10000, 20000)) %>%
mutate(est = map_dbl(n_sims, ~seMediaBoot(x = datos$length, B = .)))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(pander) #Paquetería para sacar tablas más bonitas
library(tidyverse)
set.seed(9516)
y <- rnorm(1000,10,2)
mu <- mean(y)
mu
y_mues <- sample(y, size = 200, replace = FALSE)
mean(y_mues)
y_datos <- as.data.frame(y_mues)
ggplot(y_datos, aes(x = y_mues )) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col = 'red') +
geom_vline(xintercept = mean(y_mues), col ='blue')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
muestra_boot
}
mb <- Bootstrap(y_mues)
mean(mb)
mb_datos <- as.data.frame(mb)
ggplot(mb_datos,aes(x = mb)) +
geom_histogram(alpha = 0.5) +
geom_vline(xintercept = mu, col='red')+
geom_vline(xintercept = mean(y_mues), col ='blue')+
geom_vline(xintercept = mean(mb), col = 'black')
Bootstrap <- function(x) {
n <-length(x)
muestra_boot <- sample(x, size = n, replace = TRUE)
mean(muestra_boot)
}
B <- 100
thetas <- rerun(B,Bootstrap(y_mues)) %>% flatten_dbl()
mean(thetas)
t_datos <- as.data.frame(thetas)
ggplot(t_datos, aes(x = thetas)) +
geom_histogram(alpha = 0.5)+
geom_vline(xintercept = mu, col ='red')+
geom_vline(xintercept = mean(y_mues), col= 'blue')+
geom_vline(xintercept = mean(thetas),col = 'black',
linetype = "dashed")
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(thetas)
set.seed(5865)
a <- data.frame(length = rnorm(1000, 1, 0.5))
b <- data.frame(length = rnorm(5000, 5, 1))
a$pob <- 'a'
b$pob <- 'b'
datos <- as.data.frame(rbind(a, b))
ggplot(datos,aes(x = length)) + geom_density(col='red',fill = 'black', alpha = 0.5)
mean(datos$length)
se <- function(x) sqrt(sum((x - mean(x)) ^ 2)) / length(x)
se(datos$length)
sd(datos$length)
B <- 5000
thetas <- rerun(B,Bootstrap(datos$length)) %>% flatten_dbl()
mean(thetas)
se(thetas)
sd(thetas)
th <- as.data.frame(thetas)
ggplot(th) + geom_histogram(aes(thetas),alpha = 0.5) +
geom_vline(xintercept = mean(thetas), col = 'red',alpha = 0.8) +
geom_vline(xintercept = mean(datos$length),  color = "blue",
linetype = "dashed",alpha = 0.8)
ggplot(datos,aes(x = length)) +
geom_density(col='black',fill = 'black', alpha = 0.1) +
geom_vline(xintercept = mean(thetas), col = 'red',alpha = 0.8) +
geom_vline(xintercept = mean(datos$length),  color = "blue",
linetype = "dashed",alpha = 0.8)
seMediaBoot <- function(x, B){
thetas_boot <- rerun(B, Bootstrap(x)) %>% flatten_dbl()
se(thetas_boot)
}
B_muestras <- data_frame(n_sims = c( 5, 50, 150, 400, 1000, 1500, 3000,
5000, 10000, 20000)) %>%
mutate(est = map_dbl(n_sims, ~seMediaBoot(x = datos$length, B = .)))
B_muestras
seMediaBoot <- function(x, B){
thetas_boot <- rerun(B, Bootstrap(x)) %>% flatten_dbl()
sd(thetas_boot)
}
B_muestras <- data_frame(n_sims = c( 5, 50, 150, 400, 1000, 1500, 3000,
5000, 10000, 20000)) %>%
mutate(est = map_dbl(n_sims, ~seMediaBoot(x = datos$length, B = .)))
B_muestras
